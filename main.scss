$url: "https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images";

/*
[상위요소~하위요소 순서대로 작성]
1. body
2. .container
3. .container .heroes
4. .container .heroes .hero
5. .container .heroes .hero .image
6. .container .logo
7. .container .logo img
*/

body { /* body는 블락요소 가로 너비는 최대한 늘어나는 성격을 가지니 안정해줘도 된다(Test3) */
  height: 100vh; /* 100=화면에 보이는 전체 영역 = body영역 */
  background-image: url("#{$url}/bg.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed; /* 스크롤 내릴 때 배경화면 고정*/
}

.container {
  padding: 50px 0;
  .heroes {
    display: flex; /* 수평정렬 */
    flex-wrap: wrap; /* 줄 바꿈 */
    justify-content: center; /* 가운데 정렬 */
    max-width: 700px; 
    margin: auto; /* block 요소에 가로 사이즈가 있다면 가운데 정렬 */
    padding: 40px 20px; /* (위/아리) (좌/우) */
    .hero {
      width: 80px;
      height: 84px;
      margin: 4px;
      border: 3px solid #fff;
      border-radius: 10px;
      box-sizing: border-box;
      background-color: #555;
      overflow: hidden; /* 이미지 넘치는 부분은 잘라내겠다*/
      transform: skewX(-14deg);
      transition: 
        transform .1s, /* 요소가 변하는 것*/
        background-color .6s; /* 요소는 빠르게, 배경은 천천히 변환 */
      &:hover {
        background-color: #ff9c00;
        transform: scale(1.3) skewX(-14deg); /* 마우스 올리면 커지는 효과 (하지만, 기울기 효과 적용 x -> skew적용) */
        z-index: 1; /* 요소가 커질 때 덮어쓰는 현상 제거 */
      }  
      .image {
        width: 140%;
        height: 100%;
        background-position: center; /*img 중앙 배치*/
        background-repeat: no-repeat;
        background-size: 90px;
        transform: skewX(14deg) translate(-16px); /* 기울기 원복 & 오른쪽에서 왼쪽으로 위채 변경*/
      }  
      @for $i from 1 through 32 {
        // .hero
        &:nth-child(#{$i}) .image {
          background-image: url("#{$url}/hero#{$i}.png");
        }
      }
    } 
  }
  .logo {
    max-width: 300px;
    margin: 0 auto;
    padding: 0 20px;
    img {
      width: 100%; /* 최대 너비에 맞춰 출력(img의 부모요소인 logo의 300px 보다는 커질 수 없다) */
    }
  }
}

